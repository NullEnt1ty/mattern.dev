---
import type { HTMLAttributes } from "astro/types";

interface Props {
	title: string;
	metaAttributes?: Array<HTMLAttributes<"meta">>;
}

const { title, metaAttributes } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
		<link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png" />
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		{metaAttributes?.map((attributes) => <meta {...attributes} />)}
		<title>{title}</title>
	</head>
	<body>
		<slot />
	</body>
</html>
<style is:global>
	:root {
		--text-color-primary: #454545;
		/* TODO: Add more text colors (e.g. text-color-secondary) */
	}

	html {
		font-family: ui-sans-serif, sans-serif;
		line-height: 1.5;
		padding-bottom: 6rem;
		color: var(--text-color-primary);
	}

	:where(img, video) {
		max-width: 100%;
		height: auto;
	}

	:where(figure) {
		margin-left: 0;
		margin-right: 0;
	}

	:where(figure > figcaption) {
		font-size: 0.8rem;
	}

	.btn {
		--btn-padding-y: 0.375rem;
		--btn-padding-x: 0.75rem;
		--btn-border-width: 1px;
		--btn-border-radius: 0.375rem;
		--btn-border-color: transparent;
		--btn-bg: transparent;
		--btn-color: var(--text-color-primary);

		display: inline-block;
		padding: var(--btn-padding-y) var(--btn-padding-x);
		border: var(--btn-border-width) solid var(--btn-border-color);
		border-radius: var(--btn-border-radius);
		background-color: var(--btn-bg);
		color: var(--btn-color);
		text-decoration: none;
		text-align: center;
		vertical-align: middle;
		user-select: none;
	}

	.btn:not(:disabled) {
		cursor: pointer;
	}

	.btn-primary {
		--btn-bg: #0d6efd;
		--btn-color: white;
		--btn-border-color: #0d6efd;
	}
</style>
